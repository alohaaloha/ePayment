package travelsafe.business.rules

import travelsafe.model.*

import org.joda.time.*
import java.sql.*
import function java.lang.Math.pow

declare ElementsOfPrice
    basicPrice : Double
    tiPrice : Double
    hiPrice : Double
    ciPrice : Double
end

/*
// Part for the first solution for sport
declare ItemCounter
    id : Long
    count : Long
    coef : Double
end
*/

###
###

rule "Initialize elements of price"
salience 0
dialect "mvel"
    when
        TravelInsurance()
    then
        ElementsOfPrice elementsOfPrice = new ElementsOfPrice();

        elementsOfPrice.setBasicPrice(0.0);
        elementsOfPrice.setTiPrice(0.0);
        elementsOfPrice.setHiPrice(0.0);
        elementsOfPrice.setCiPrice(0.0);

        insertLogical(elementsOfPrice)
        System.out.println("DROOLS: Values initialized");
    end

###
###

# INITIAL CALCULATE

rule "Initial/basic price"
salience -1
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $price : Price()
        $elementsOfPrice : ElementsOfPrice()
    then
        System.out.println("DROOLS: Initial/basic price rule satisfied");
        Double basicPrice = $price.getAmount();
        System.out.println("DROOLS: Basic price set to: " + basicPrice);

        $elementsOfPrice.setBasicPrice(basicPrice);
    end

###
###

# TRAVEL INSURANCE

rule "Travel insurance duration - any"
salience -2
dialect "mvel"
    when
        $travelInsurance : TravelInsurance($duration : getDuration(), 0 <= $duration)
        $typeOfRisk : TypeOfRisk(code == "duration_ti")
        $item : Item($itemCoef : coef, code == "any", typeOfRisk.id == $typeOfRisk.id)
        $elementsOfPrice : ElementsOfPrice($tiPrice : tiPrice)
    then
        System.out.println("DROOLS: Travel insurance duration - any rule satisfied");
        Double newTiPrice = $duration * $itemCoef;
        System.out.println("DROOLS: New TI price set to: " + newTiPrice);

        $elementsOfPrice.setTiPrice(newTiPrice);
    end

###

rule "Travel insurance region - selectd exist"
salience -3
dialect "mvel"
    when
        $travelInsurance : TravelInsurance($region : region, region != null)
        $typeOfRisk : TypeOfRisk(code == "region_ti")
        $item : Item($itemCoef : coef, typeOfRisk.id == $typeOfRisk.id, id == $travelInsurance.region.id)
        $elementsOfPrice : ElementsOfPrice($tiPrice : tiPrice)
    then
        System.out.println("DROOLS: Travel insurance region - selectd exist rule satisfied");
        Double newTiPrice = $tiPrice * $itemCoef;
        System.out.println("DROOLS: New TI price set to: " + newTiPrice);

        $elementsOfPrice.setTiPrice(newTiPrice);
    end

###

rule "Travel insurance number of people - le_5"
salience -4
dialect "mvel"
    when
        $travelInsurance : TravelInsurance($numberOfPeople : numberOfPeople, 0 <= numberOfPeople, numberOfPeople <= 5)
        $typeOfRisk : TypeOfRisk(code == "number_of_people_ti")
        $item : Item($itemCoef : coef, code == "le_5", typeOfRisk.id == $typeOfRisk.id)
        $elementsOfPrice : ElementsOfPrice($tiPrice : tiPrice)
    then
        System.out.println("DROOLS: Travel insurance number of people - le_5 rule satisfied");
        Double newTiPrice = $tiPrice * $numberOfPeople * $itemCoef;
        System.out.println("DROOLS: New TI price set to: " + newTiPrice);

        $elementsOfPrice.setTiPrice(newTiPrice);
    end

rule "Travel insurance number of people - gt_5"
salience -4
dialect "mvel"
    when
        $travelInsurance : TravelInsurance($numberOfPeople : numberOfPeople, numberOfPeople > 5)
        $typeOfRisk : TypeOfRisk(code == "number_of_people_ti")
        $item : Item($itemCoef : coef, code == "gt_5", typeOfRisk.id == $typeOfRisk.id)
        $elementsOfPrice : ElementsOfPrice($tiPrice : tiPrice)
    then
        System.out.println("DROOLS: Travel insurance number of people - gt_5 rule satisfied");
        Double newTiPrice = $tiPrice * $numberOfPeople * $itemCoef;
        System.out.println("DROOLS: New TI price set to: " + newTiPrice);

        $elementsOfPrice.setTiPrice(newTiPrice);
    end

###

global java.util.List<Double> peopleAgeRanges;

rule "Travel insurance age of person"
salience -5
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $typeOfRisk : TypeOfRisk(code == "age_ti")
        $item1 : Item($itemCoef1 : coef, code == "lt_18", typeOfRisk.id == $typeOfRisk.id)
        $item2 : Item($itemCoef2 : coef, code == "btw_18_65", typeOfRisk.id == $typeOfRisk.id)
        $item3 : Item($itemCoef3 : coef, code == "gt_65", typeOfRisk.id == $typeOfRisk.id)
        $elementsOfPrice : ElementsOfPrice($tiPrice : tiPrice)
    then
        System.out.println("DROOLS: Travel insurance age of person rule satisfied");
        Double lt18 = peopleAgeRanges.get(0);
        Double btw1865 = peopleAgeRanges.get(1);
        Double gt65 = peopleAgeRanges.get(2);
        System.out.println("DROOLS: Num of people aged lt18: " + lt18);
        System.out.println("DROOLS: Num of people aged btw1865: " + btw1865);
        System.out.println("DROOLS: Num of people aged gt65: " + gt65);
        Double newTiPrice = $tiPrice + $tiPrice * pow($itemCoef1, lt18) * pow($itemCoef2, btw1865) * pow($itemCoef3, gt65) /10;

        System.out.println("DROOLS: itemCeof1: " + $itemCoef1);
        System.out.println("DROOLS: itemCeof2: " + $itemCoef2);
        System.out.println("DROOLS: itemCeof3: " + $itemCoef3);
        System.out.println("DROOLS: New TI price set to: " + newTiPrice);

        $elementsOfPrice.setTiPrice(newTiPrice);
    end

/*
// The first solution for sport
rule "Travel insurance sport - first count"
salience -6
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $typeOfRisk : TypeOfRisk(code == "sport_ti")
        $item : Item($itemCoef : coef, $itemId : id, typeOfRisk.id == $typeOfRisk.id)
        not ItemCounter(id == $itemId)
    then
        System.out.println("DROOLS: Travel insurance sport - first count rule satisfied");
        ItemCounter itemCounter = new ItemCounter();
        itemCounter.setId($itemId);
        itemCounter.setCount(new Long(1));
        itemCounter.setCoef($itemCoef);

        insert(itemCounter);

        System.out.println("DROOLS: itemId: " + $itemId);
    end

rule "Travel insurance sport - count"
salience -7
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $participantInInsurance : ParticipantInInsurance($participantsItems : items, items != null)
        $typeOfRisk : TypeOfRisk(code == "sport_ti")
        $item : Item($itemId : id, typeOfRisk.id == $typeOfRisk.id)
        Item(id == $itemId) from $participantsItems
        $itemCounter : ItemCounter(id == $itemId, $count : count)
    then
        System.out.println("DROOLS: Travel insurance sport - count rule satisfied");
        $itemCounter.setCount($count + new Long(1));
        System.out.println("DROOLS: Sport items count, itemId: " + $itemId + ", itemCounter: " + $itemCounter.getCount());
    end

rule "Travel insurance sport - calculate"
salience -8
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $itemCounter : ItemCounter(count > 0)
        $elementsOfPrice : ElementsOfPrice($tiPrice : tiPrice)
    then
        System.out.println("DROOLS: Travel insurance sport - calculate rule satisfied");
        System.out.println("c: " + $itemCounter.getId() + " " + $itemCounter.getCount());
        System.out.println("DROOLS: itemCounterId: " + $itemCounter.getId() + ", itemCounter: " + $itemCounter.getCount());
        Double newTiPrice = $tiPrice * $itemCounter.getCount() * $itemCounter.getCoef();

        System.out.println("DROOLS: New TI price set to: " + newTiPrice);
        $elementsOfPrice.setTiPrice(newTiPrice);
    end
*/

// The second solution for sport
rule "Travel insurance sport - count"
salience -8
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $participantInInsurance : ParticipantInInsurance($participantsItems : items, items != null)
        $typeOfRisk : TypeOfRisk(code == "sport_ti")
        $item : Item($itemId : id, $itemCoef : coef, typeOfRisk.id == $typeOfRisk.id)
        Item(id == $itemId) from $participantsItems
        $elementsOfPrice : ElementsOfPrice($tiPrice : tiPrice)
    then
        System.out.println("DROOLS: Travel insurance sport - count rule satisfied");
        Double newTiPrice = $tiPrice * $itemCoef;
        System.out.println("DROOLS: New TI price set to: " + newTiPrice);

        $elementsOfPrice.setTiPrice(newTiPrice);
    end

###

rule "Travel insurance max amount"
salience -9
dialect "mvel"
    when
        $travelInsurance : TravelInsurance($maxAmount : maxAmount, maxAmount != null)
        $typeOfRisk : TypeOfRisk(code == "max_amount_ti")
        $item : Item($itemCoef : coef, typeOfRisk.id == $typeOfRisk.id, id == $maxAmount.id)
        $elementsOfPrice : ElementsOfPrice($tiPrice : tiPrice)
    then
        System.out.println("DROOLS: Travel insurance max amount rule satisfied");
        Double newTiPrice = $tiPrice * $itemCoef;
        System.out.println("DROOLS: New TI price set to: " + newTiPrice);

        $elementsOfPrice.setTiPrice(newTiPrice);
    end

###

# HOME INSURANCE

rule "Home insurance duration - any"
salience -10
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $homeInsurance : HomeInsurance($duration : getDuration(), 0 <= $duration)
        $typeOfRisk : TypeOfRisk(code == "duration_hi")
        $item : Item($itemCoef : coef, code == "any", typeOfRisk.id == $typeOfRisk.id)
        $elementsOfPrice : ElementsOfPrice($hiPrice : hiPrice)
    then
        System.out.println("DROOLS: Home insurance duration - any rule satisfied");
        Double newHiPrice = $duration * $itemCoef;
        System.out.println("DROOLS: New HI price set to: " + newHiPrice);

        $elementsOfPrice.setHiPrice(newHiPrice);
    end

###

rule "Home insurance surface area - less than or equal to 50m^2"
salience -11
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $homeInsurance : HomeInsurance($surfaceArea : surfaceArea, 0 <= surfaceArea, surfaceArea <= 50)
        $typeOfRisk : TypeOfRisk(code == "surface_area_hi")
        $item : Item($itemCoef : coef, code == "le_50m2", typeOfRisk.id == $typeOfRisk.id)
        $elementsOfPrice : ElementsOfPrice($hiPrice : hiPrice)
    then
        System.out.println("DROOLS: Home insurance surface area - less than or equal to 50m^2 rule satisfied");
        Double newHiPrice = $hiPrice * $surfaceArea * $itemCoef;
        System.out.println("DROOLS: New HI price set to: " + newHiPrice);

        $elementsOfPrice.setHiPrice(newHiPrice);
    end

rule "Home insurance surface area - more than 50m^2"
salience -11
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $homeInsurance : HomeInsurance($surfaceArea : surfaceArea, surfaceArea > 50)
        $typeOfRisk : TypeOfRisk(code == "surface_area_hi")
        $item : Item($itemCoef : coef, code == "gt_50m2", typeOfRisk.id == $typeOfRisk.id)
        $elementsOfPrice : ElementsOfPrice($hiPrice : hiPrice)
    then
        System.out.println("DROOLS: Home insurance surface area - more than 50m^2 rule satisfied");
        Double newHiPrice = $hiPrice * $surfaceArea * $itemCoef;
        System.out.println("DROOLS: New HI price set to: " + newHiPrice);

        $elementsOfPrice.setHiPrice(newHiPrice);
    end

###

rule "Home insurance age - less than or equal to 10 years"
salience -12
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $homeInsurance : HomeInsurance(0 <= age, age <= 10)
        $typeOfRisk : TypeOfRisk(code == "age_hi")
        $item : Item($itemCoef : coef, code == "le_10", typeOfRisk.id == $typeOfRisk.id)
        $elementsOfPrice : ElementsOfPrice($hiPrice : hiPrice)
    then
        System.out.println("DROOLS: Home insurance age - less than or equal to 10 years rule satisfied");
        Double newHiPrice = $hiPrice * $itemCoef;
        System.out.println("DROOLS: New HI price set to: " + newHiPrice);

        $elementsOfPrice.setHiPrice(newHiPrice);
    end

rule "Home insurance age - more than 10 years"
salience -12
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $homeInsurance : HomeInsurance(age > 10)
        $typeOfRisk : TypeOfRisk(code == "age_hi")
        $item : Item($itemCoef : coef, code == "gt_10", typeOfRisk.id == $typeOfRisk.id)
        $elementsOfPrice : ElementsOfPrice($hiPrice : hiPrice)
    then
        System.out.println("DROOLS: Home insurance age - more than 10 years rule satisfied");
        Double newHiPrice = $hiPrice * $itemCoef;
        System.out.println("DROOLS: New HI price set to: " + newHiPrice);

        $elementsOfPrice.setHiPrice(newHiPrice);
    end

###

rule "Home insurance estimated value - all"
salience -13
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $homeInsurance : HomeInsurance($estimatedValue : estimatedValue)
        $typeOfRisk : TypeOfRisk(code == "estimated_value_hi")
        $item : Item($itemCoef : coef, code == "all", typeOfRisk.id == $typeOfRisk.id)
        $elementsOfPrice : ElementsOfPrice($hiPrice : hiPrice)
    then
        System.out.println("DROOLS: Home insurance estimated value - all rule satisfied");
        Double newHiPrice = $hiPrice * $estimatedValue * $item.getCoef();
        System.out.println("DROOLS: New HI price set to: " + newHiPrice);

        $elementsOfPrice.setHiPrice(newHiPrice);
    end

###

rule "Home insurance insurance descriptions"
salience -14
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $homeInsurance : HomeInsurance($insuranceDescriptions : insuranceDescriptions, insuranceDescriptions != null)
        $typeOfRisk : TypeOfRisk(code == "insurance_desc_hi")
        $item : Item($itemId : id, $itemCoef : coef, typeOfRisk.id == $typeOfRisk.id)
        Item(id == $itemId) from $insuranceDescriptions
        $elementsOfPrice : ElementsOfPrice($hiPrice : hiPrice)
    then
        System.out.println("DROOLS: Home insurance insurance descriptions rule satisfied");
        Double newHiPrice = $hiPrice * $itemCoef;
        System.out.println("DROOLS: New HI price set to: " + newHiPrice);

        $elementsOfPrice.setHiPrice(newHiPrice);
    end

###
###

# CAR INSURANCE

rule "Car insurance duration - any"
salience -15
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $carInsurance : CarInsurance($duration : getDuration(), 0 <= $duration)
        $typeOfRisk : TypeOfRisk(code == "duration_ci")
        $item : Item($itemCoef : coef, code == "any", typeOfRisk.id == $typeOfRisk.id)
        $elementsOfPrice : ElementsOfPrice($ciPrice : ciPrice)
    then
        System.out.println("DROOLS: Car insurance duration - any rule satisfied");
        Double newCiPrice = $itemCoef * $duration;
        System.out.println("DROOLS: New CI price set to: " + newCiPrice);

        $elementsOfPrice.setCiPrice(newCiPrice);
    end

###

rule "Car insurance car packages"
salience -16
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $carInsurance : CarInsurance($carPackagesItems : carPackagesItems, carPackagesItems != null)
        $typeOfRisk : TypeOfRisk(code == "car_package_ci")
        $item : Item($itemId : id, $itemCoef : coef, typeOfRisk.id == $typeOfRisk.id)
        Item(id == $itemId) from $carPackagesItems
        $elementsOfPrice : ElementsOfPrice($ciPrice : ciPrice)
    then
        System.out.println("DROOLS: Car insurance car packages rule satisfied");
        Double newCiPrice = $ciPrice * $itemCoef;
        System.out.println("DROOLS: New CI price set to: " + newCiPrice);

        $elementsOfPrice.setCiPrice(newCiPrice);
    end

###
###

# FINAL CALCULATE

rule "Calculate total price"
salience -50
dialect "mvel"
    when
        $travelInsurance : TravelInsurance()
        $elementsOfPrice : ElementsOfPrice()
    then
        Double basicPrice = $elementsOfPrice.getBasicPrice();
        Double tiPrice = $elementsOfPrice.getTiPrice();
        Double hiPrice = $elementsOfPrice.getHiPrice();
        Double ciPrice = $elementsOfPrice.getCiPrice();
        Double newTotalPrice = basicPrice + tiPrice + hiPrice + ciPrice;
        System.out.println("DROOLS: New total price set to: " + newTotalPrice);

        $travelInsurance.setTotalPrice(newTotalPrice);
    end
