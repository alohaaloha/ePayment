!function(){"use strict";function e(){}angular.module("travelsafeapp",["ui.router","btorfs.multiselect","pascalprecht.translate","angucomplete-alt","ngMessages","ui.bootstrap"]).run(e),e.$inject=["$rootScope","$state"]}(),function(){"use strict";function e(e,r,a){var n={about:"About us",accomodation:"Accomodation",address:"Address: ",addressPlchld:"Address ",addRiskForPerson:"Add risks for person no.",allTravelTime:"All travel time",amount:"Amount: ",amountTooltip:"Maximum amount of money that the insurance will cover.",buttonTextPlural:"selected",buttonTextSingular:"Select",buyInsurance:"Buy insurance",carDetailsText:"Car related information",carInsurance:"Car insurance",carInsuranceDetailsText:"Road assistance details",carrier:"Carrier",carrierTooltip:"Insurance must have one person who is insurance carrier",choose:"Choose",chooseInsuranceCarrier:"Choose insurance carrier",choosePerson:"Choose person",chooseYourInsurance:"Choose your insurance",ciBrand:"Vehicle brand",ciChassisNumber:"Chassis number",ciOwnerFirstName:"Owner's first name",ciOwnerLastName:"Owner's last name",ciOwnerPin:"Owner's personal ID",ciRegistrationNumber:"Registration number",ciType:"Vehicle type",ciYear:"Year of manufacture ",ciYearMinError:"Not covering vehicles manufactured before 1900",ciYearMaxError:"Not covering not yet manufactured vehicles",clear:"Clear",close:"Close",contact:"Contact",coverage:"Coverage",dateOfBirth:"Date of birth: ",dateOfBirthMaxError:"The person must be born",dateOfBirthPlchld:"Date of birth ",editDetails:"Edit details",english:"English",fieldRequired:"This field is required.",firstName:"First name: ",firstNamePlchld:"First name ",hiAddress:"Property address",hiDurationMaxError:"Home insurance cannot last longer than travel duration",hiEstimatedValue:"Estimated value",hiEstimatedValueMin:"Estimated value must be greater than 100 (scraped radishes)",hiOwnerFirstName:"Owner's first name",hiOwnerLastName:"Owner's last name",hiOwnerPin:"Owner's personal ID",hiSurfaceArea:"Surface area",hiSurfaceAreaMinError:"Minimum surface area is 10 m^2",hiYear:"Year of construction",hiYearMinError:"Not covering properties built before 1800",hiYearMaxError:"Not covering not yet built properties",home:"Home",homeInsurance:"Home insurance",homeInsuranceDetailsText:"Home insurance details",informationForPerson:"Information for person no.",insuranceDuration:"Insurance duration: ",insuranceDurationMinError:"The minimum duration is 1 day.",insuranceDurationTooltip:"Duration of an insurance. Number of days.",insurancePeopleDetailsText:"Insert travellers details:",insurances:"Insurances",invalidDateErrorMessage:"Invalid date format (yyyy/mm/dd or mm/dd/yyyy)",iWantHomeInsurance:"I want home insurance",iWantCarInsurance:"I want road assistance",lastName:"Last name: ",lastNamePlchld:"Last name ",next:"Next",noCarrierChoosen:"No carrier choosen",numberOfPeople:"Number of people: ",numOfPeopleMinError:"The minimum number of people insured is 1.",numOfPeopleTooltip:"Number of people that will be covered by this insurance.",passportNumber:"Passport number: ",passportNumberPlchld:"Passport number ",person:"Person",personDetailsNotValidError:"*Person's details are incomplete",personalID:"Personal ID: ",personalIDPlchld:"Personal ID ",pinMinLengthError:"Minimum pin length is 3",phoneNumber:"Phone number: ",phoneNumberPlchld:"Phone number ",region:"Region: ",regionPlchld:"e.g. Bahami",regionTooltip:"Region that you're traveling to.",repair:"Repair",serbian:"Serbian",step1:"1",step2:"2",step3:"3",step4:"4",step5:"5",testing:"Testing",today:"Today",towing:"Towing",transport:"Transport",travelSafe:"Travel safe",travelSafeWithUs:"Travel safe with us",typeOfRisk:"Type of risk",withUs:"with us!"},o={testing:"Testiranje",english:"Engleski",serbian:"Srpski",home:"Početna",insurances:"Osiguranja",buyInsurance:"Kupi osiguranje",about:"O nama",travelSafe:"Putuj bezbedno",travelSafeWithUs:"Putujte bezbedno sa nama",withUs:"sa nama!",chooseYourInsurance:"Izaberite vaše osiguranje",step1:"1",step2:"2",step3:"3",step4:"4",step5:"5",informationForPerson:"Detalji za osobu ",insuranceDuration:"Trajanje osiguranja: ",region:"Region: ",numberOfPeople:"Broj osoba: ",amount:"Iznos: ",carrier:"Nosilac",choosePerson:"Izaberite osobu",chooseInsuranceCarrier:"Izaberite nosioca osiguranja",firstName:"Ime: ",lastName:"Prezime: ",personalID:"JMBG: ",dateOfBirth:"Datum rođenja: ",passportNumber:"Broj pasoša: ",address:"Adresa: ",phoneNumber:"Broj telefona: ",homeInsurance:"Osiguranje kuće",carInsurance:"Osiguranje vozila",next:"Dalje",person:"Osoba",regionPlchld:"npr. Bahami",firstNamePlchld:"Ime ",lastNamePlchld:"Prezime ",personalIDPlchld:"JMBG ",dateOfBirthPlchld:"Datum rođenja ",passportNumberPlchld:"Broj pasoša ",addressPlchld:"Adresa ",phoneNumberPlchld:"Broj telefona ",noCarrierChoosen:"Nosilac nije izabran",contact:"Kontakt",editDetails:"Izmeni detalje",insurancePeopleDetailsText:"Unesite detalje o osiguranim putnicima:",close:"Zatvori",regionTooltip:"Region u koji putujete.",numOfPeopleTooltip:"Broj osoba koji će biti pokriveni osiguranjem.",amountTooltip:"Maksimalna količina novca koje će osiguranje pokriti.",insuranceDurationTooltip:"Trajanje putovanja. Broj dana za koje će osiguranje trajati.",fieldRequired:"Polje je obavezno.",insuranceDurationMinError:"Minimalno trajanje putovanja je 1.",numOfPeopleMinError:"Minimalan broj osiguranika je 1.",pinMinLengthError:"Minimalan broj karaktera pin-a je 3",invalidDateErrorMessage:"Neispravan format datuma (dd.mm.gggg)",personDetailsNotValidError:"*Podaci o osobi su nepotpuni",carrierTooltip:"Jedna osoba mora biti nosilac osiguranja",dateOfBirthMaxError:"Osoba mora biti rođena",iWantHomeInsurance:"Želim da osiguram kuću/stan",coverage:"Pokriće",clear:"Očisti",today:"Danas",allTravelTime:"Sve vreme puta",hiDurationMaxError:"Kućno osiguranje ne može trajati duže od puta",homeInsuranceDetailsText:"Unesite detalje za kućno/stambeno osiguranje",hiSurfaceArea:"Površina stana",hiSurfaceAreaMinError:"Minimalna površina stana/kuće je 10 m^2",hiYear:"Godina gradnje",hiYearMinError:"Osiguranje ne pokriva objekte starije od 1800. godine",hiYearMaxError:"Osiguranje ne pokriva neizgrađene objekte",hiEstimatedValue:"Procenjena vrednost",hiEstimatedValueMin:"Procenjena vrednost mora biti viša od 100 (rotkvica struganih)",hiOwnerFirstName:"Ime vlasnika",hiOwnerLastName:"Prezime vlasnika",hiOwnerPin:"JMBG vlasnika",hiAddress:"Adresa objekta",iWantCarInsurance:"Želim mogućnost pružanja pomoći na putu",carInsuranceDetailsText:"Podaci u vezi osiguranja pružanja pomoći na putu",carDetailsText:"Podaci o vozilu",towing:"Šlepovanje",repair:"Popravka",transport:"Transport",accomodation:"Smeštaj",ciBrand:"Marka vozila",ciType:"Tip vozila",ciYear:"Godina proizvodnje",ciYearMinError:"Osiguranje ne pokriva vozila starija od 1900. godine",ciYearMaxError:"Osiguranje ne pokriva još uvek neproizvedena vozila",ciRegistrationNumber:"Registarski broj",ciChassisNumber:"Broj šasije",ciOwnerFirstName:"Ime vlasnika",ciOwnerLastName:"Prezime vlasnika",ciOwnerPin:"JMBG vlasnika",typeOfRisk:"Tip rizika",choose:"Izaberi",addRiskForPerson:"Dodaj rizike za osobu",buttonTextSingular:"Izaberi",buttonTextPlural:"izabrana"};a.translations("en",n),a.translations("sr",o),a.preferredLanguage("sr"),a.useSanitizeValueStrategy("escaped"),r.otherwise("/home"),e.state("home",{url:"/home",views:{content:{templateUrl:"home/home.html",controller:"HomeController"},navbar:{templateUrl:"navbar/navbar.html",controller:"NavbarController"}}})}angular.module("travelsafeapp").config(e),e.$inject=["$stateProvider","$urlRouterProvider","$translateProvider"]}(),function(){"use strict";function e(e,r,a){e.changeCurrentLanguage=function(e){a.use(e)}}angular.module("travelsafeapp").controller("NavbarController",e),e.$inject=["$scope","$state","$translate"]}(),function(){"use strict";function e(e){e.goToBuyState=function(){window.location.href="https://localhost:8090/#/buy"}}angular.module("travelsafeapp").controller("HomeController",e),e.$inject=["$scope","$state"]}(),function(){"use strict";function e(e,r,a,n,o,t,i,s){e.travelInsurance={},e.travelInsurance.totalPrice=0,e.activeOption=[!0,!1,!1,!1,!1],e.activeOptionNumber=0,e.progresBarValue=100/e.activeOption.length,e.travelInsurance.numberOfPeople=0,e.travelInsurance.duration=0,e.travelInsurance.maxAmount=null,e.setCoverage=function(r){e.travelInsurance.maxAmount=r},e.risks={},e.durationChanged=function(){e.isHomeWanted&&e.hitiDurationEquals&&(e.hi.duration=e.travelInsurance.duration),e.isCarWanted&&e.citiDurationEquals&&(e.ci.duration=e.travelInsurance.duration)},e.remoteUrlRequestFn=function(e){var r="";return r="sr"==s.use()?"ser":"en",{searchCriteria:e,language:r}},e.remoteUrlResponseFn=function(e){for(var r=0;r<e.length;r++)e[r].flag="assets/custom/images/regions/"+s.use()+"/"+e[r].name+".png";return{regions:e}},e.regionSelectedCallback=function(r){r&&(e.travelInsurance.region=r.originalObject)},e.travelInsurance.participantInInsurances=[],e.peopleFormValid=[],e.currentPerson=-1,e.insuranceCarrierIndex=-1,e.changeCurrentPerson=function(r){e.currentPerson=r},e.changeInsuranceCarrierIndex=function(r){for(var a=0;a<e.travelInsurance.participantInInsurances.length;a++)e.travelInsurance.participantInInsurances[a].carrier=!1;e.travelInsurance.participantInInsurances[r].carrier=!0},e.openPersonDetailsModal=function(r){var n=a.open({ariaLabelledBy:"modal-title",ariaDescribedBy:"modal-body",templateUrl:"buy/edit-person-details-dialog.template.html",controller:"EditPersonDetailsController",resolve:{person:function(){return e.travelInsurance.participantInInsurances[r]}}});n.result.then(function(a){e.travelInsurance.participantInInsurances[r]=a.person,e.peopleFormValid[r]=a.isFormValid},function(){})},e.openRisksModal=function(r){var n=a.open({ariaLabelledBy:"modal-title",ariaDescribedBy:"modal-body",templateUrl:"buy/type-of-risks-dialog.template.html",controller:"TypeOfRiskController",resolve:{person:function(){return e.travelInsurance.participantInInsurances[r]},typeOfRisks:function(){var e={method:"GET",url:"/api/TypeOfRisks/1"},r=i.defer();return t(e).then(function(e){console.log(e),r.resolve(e.data)},function(){console.log("FAILED GET RISKS")}),r.promise},risks:function(){return e.risks}}});n.result.then(function(a){e.travelInsurance.participantInInsurances[r].items=a.person.items,e.risks=a.risks},function(){})},e.isHomeWanted=!1,e.hi={},e.hi.address="",e.hi.age=0,e.hi.surfaceArea=0,e.hi.estimatedValue=0,e.hi.ownersName="",e.hi.ownersSurname="",e.hi.ownersPIN="",e.hitiDurationEquals=!0,e.hiMaxYear=(new Date).getFullYear(),e.changeHIDuration=function(){e.hitiDurationEquals&&(e.hi.duration=e.travelInsurance.duration)},e.hiFlood=!1,e.hiBurglary=!1,e.hiFire=!1,e.triggerHICoverage=function(r){switch(r){case"fire":e.hiFire=!e.hiFire;break;case"flood":e.hiFlood=!e.hiFlood;break;case"burglary":e.hiBurglary=!e.hiBurglary}},e.isCarWanted=!1,e.ci={},e.ci.duration=0,e.citiDurationEquals=!0,e.changeCIDuration=function(){e.citiDurationEquals&&(e.ci.duration=e.travelInsurance.duration)},e.ci.brand="",e.ci.type="",e.ci.yearOfProduction=0,e.ciMaxYearOfProduction=(new Date).getFullYear(),e.ci.registrationNumber="",e.ci.chassisNumber="",e.ci.ownersName="",e.ci.ownersSurname="",e.ci.ownersPIN="",e.ciTowing=!1,e.ciAccomodation=!1,e.ciRepair=!1,e.ciTransport=!1,e.triggerCICoverage=function(r){switch(r){case"towing":e.ciTowing=!e.ciTowing;break;case"accomodation":e.ciAccomodation=!e.ciAccomodation;break;case"repair":e.ciRepair=!e.ciRepair;break;case"transport":e.ciTransport=!e.ciTransport}},e.isOptionDisabled=function(e){return!1},e.setActiveOption=function(r){if(!e.isOptionDisabled(r)){e.activeOptionNumber=r;for(var a=0;5>a;a++)e.activeOption[a]=!1;if(e.activeOption[r]=!0,e.progresBarValue=(e.activeOptionNumber+1)*(100/e.activeOption.length)-1,1==r){e.insuranceCarrierIndex>=e.travelInsurance.numberOfPeople&&(e.insuranceCarrierIndex=-1),e.currentPerson>=e.travelInsurance.numberOfPeople&&(e.currentPerson=-1);for(var a=0;a<e.travelInsurance.numberOfPeople;a++)if(void 0==e.travelInsurance.participantInInsurances[a]){e.travelInsurance.participantInInsurances[a]={idx:a,name:null,surname:null,pin:null,carrier:!1,passportNumber:null,address:null,phoneNumber:null,dateOfBirth:null,items:[]},e.peopleFormValid[a]=!1;var n=function(e){return function(){return e.items}}(e.travelInsurance.participantInInsurances[a]);e.$watch(n,e.calculatePrice)}e.travelInsurance.participantInInsurances.length>e.travelInsurance.numberOfPeople&&e.travelInsurance.participantInInsurances.splice(e.travelInsurance.numberOfPeople,e.travelInsurance.participantInInsurances.length-e.travelInsurance.numberOfPeople)}2==r&&e.hitiDurationEquals&&(e.hi.duration=e.travelInsurance.duration),3==r&&e.citiDurationEquals&&(e.ci.duration=e.travelInsurance.duration)}},e.goToNextOption=function(){4!=e.activeOptionNumber&&e.setActiveOption(e.activeOptionNumber+1)},e.calculatePrice=function(){o.fetchPrice(e.travelInsurance,e.refreshPrice,function(){console.log("Unsuccessful try for fetching price")})},e.refreshPrice=function(r){console.log("Successful fetched price: "+r.data),e.travelInsurance.totalPrice=r.data},e.$watch("travelInsurance.duration",e.calculatePrice),e.$watch("travelInsurance.maxAmount",e.calculatePrice),e.$watch("travelInsurance.region",e.calculatePrice),e.buyInsurance=function(){e.travelInsurance.homeInsurances=[e.hi],e.travelInsurance.carInsurances=[e.ci];var r={};r.id=e.travelInsurance.region.id,r.coef=e.travelInsurance.region.coef,e.travelInsurance.region=r;var a={method:"POST",url:"/api/TravelInsurances",data:e.travelInsurance};t(a).then(function(){console.log("TRAVEL INSURANCE SUCCESSFULLY POSTED")},function(){console.log("FAILED POSTING TRAVEL INSURANCE")}),n.createPayment(e.travelInsurance,function(e){window.location=e.data.link.href},function(){})}}angular.module("travelsafeapp").controller("BuyController",e),e.$inject=["$scope","$state","$uibModal","StatusService","PriceService","$http","$q","$translate","$timeout"]}(),function(){"use strict";function e(e,r,a){e.person=a,console.log("Mocal controller dobio person:"),console.log(a),e.popupDOBP={opened:!1},e.popupDOBP.opened=!1,e.formats=["yyyy/MM/dd","dd-MMMM-yyyy","dd-MM-yyyy","shortDate","d!.M!.yyyy","M!/d!/yyyy"],e.altInputFormats=e.formats,e.format=e.formats[0],e.maxBornDate=new Date,e.dateOptions={formatYear:"yy",startingDay:1,showWeeks:!1,maxDate:new Date},e.openDateOfBirthPicker=function(){e.popupDOBP.opened=!0},e.dismissModal=function(a){console.log("Closing modal..."),console.log("Giving back person object:"),console.log(e.person),console.log("Giving back form validation:"),console.log(a.$valid);var n={person:e.person,isFormValid:a.$valid};r.close(n)}}angular.module("travelsafeapp").controller("EditPersonDetailsController",e),e.$inject=["$scope","$uibModalInstance","person"]}(),function(){"use strict";function e(e,r,a,n,o,t){e.person=a,console.log("Modal controller dobio person:"),console.log(a),e.typeOfRisks=n,console.log("Modal controller dobio typeOfRisks:"),console.log(n),e.risks=void 0==t?{}:t,e.dismissModal=function(){function a(r){if(console.log(e.risks[r.id]),void 0!=e.risks[r.id])for(var a=0;a<e.risks[r.id].length;a++)e.risks[r.id][a].typeOfRisk=null,o.push(e.risks[r.id][a])}console.log("Closing modal..."),console.log("Giving back person object:"),console.log(e.person),console.log("Giving back form validation:");var o=[];n.forEach(a),e.person.items=o;var t={person:e.person,risks:e.risks};r.close(t)},"sr"==o.use()?e.riskDisplayName="name_srb":"en"==o.use()&&(e.riskDisplayName="name_en")}angular.module("travelsafeapp").controller("TypeOfRiskController",e),e.$inject=["$scope","$uibModalInstance","person","typeOfRisks","$translate","risks"]}(),function(){"use strict";function e(e){e.state("buy",{url:"/buy",views:{"content@":{templateUrl:"buy/buy.html",controller:"BuyController",controllerAs:"bc"},navbar:{templateUrl:"navbar/navbar.html",controller:"NavbarController"}}})}angular.module("travelsafeapp").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){function e(e){return{fetchPrice:function(r,a,n){var o={method:"PUT",url:"/api/TravelInsurances/price",data:r,headers:{"Content-Type":"application/json"}};e(o).then(a,n)}}}angular.module("travelsafeapp").factory("PriceService",e),e.$inject=["$http"]}(),function(){"use strict";function e(e,r,a,n,o){e.showValue=0,o.search().PayerID&&o.search().paymentId&&(e.showValue=1,a.getOrderById(n.orderId,function(r){e.travelInsurance=r.data,console.log(e.travelInsurance)},function(){})),e.execute=function(){a.executePayment(n.orderId,o.search().paymentId,o.search().PayerID,function(r){console.log(r),alertify.success("YAAAY YOU BOUGHT IT SUCCESSFULLY "),e.showValue=2},function(e){console.log(e),alertify.error("Hmmm, there is an error. Check your PayPal balance.")})},e.cancel=function(){a.cancel(n.orderId,o.search().paymentId,o.search().PayerID,function(){r.go("home")},function(){})},e.click=0,e.clickf=function(){e.click++}}angular.module("travelsafeapp").controller("StatusController",e),e.$inject=["$scope","$state","StatusService","$stateParams","$location"]}(),function(){function e(e){return{createPayment:function(r,a,n){var o={method:"POST",url:"/api/paypal/create",data:r,headers:{"Content-Type":"application/json"}};e(o).then(a,n)},executePayment:function(r,a,n,o,t){var i={method:"POST",url:"/api/paypal/execute/"+r+"/"+a+"/"+n};e(i).then(o,t)},getOrderById:function(r,a,n){var o={method:"GET",url:"/api/TravelInsurances/"+r};e(o).then(a,n)},cancel:function(r,a,n,o,t){var i={method:"POST",url:"/api/paypal/cancel/"+r+"/"+a+"/"+n};e(i).then(o,t)}}}angular.module("travelsafeapp").factory("StatusService",e),e.$inject=["$http"]}(),function(){"use strict";function e(e){e.state("status",{url:"/status/{orderId}",views:{"content@":{templateUrl:"paypal/status.html",controller:"StatusController"},navbar:{templateUrl:"navbar/navbar.html",controller:"NavbarController"}}})}angular.module("travelsafeapp").config(e),e.$inject=["$stateProvider","$urlRouterProvider"]}();